# https://help.github.com/en/categories/automating-your-workflow-with-github-actions

# file-version: 1.0

name: "Continuous Integration"

on:
  - pull_request
  - push

permissions:
  contents: read

concurrency:
  group: "${{ github.event_name }}-${{ github.workflow }}-${{ github.head_ref || github.run_id }}-${{ github.ref }}"
  cancel-in-progress: true

jobs:
  validate:
    name: "Validate Project"

    uses: "mimmi20/ci/.github/workflows/validate.yml@master"
    with:
      extensions: "ctype, curl, dom, iconv, intl, mbstring, simplexml, tokenizer, xml, xmlwriter"
      ini-values: "opcache.enable=1, opcache.fast_shutdown=0, zend.assertions=1, assert.exception=On, intl.default_locale=de, intl.use_exceptions=1, zend.exception_ignore_args=0"
      composer-options: "--optimize-autoloader --prefer-dist --prefer-stable -v"
      skip-validate-composer: false
      skip-validate-yaml: false
      skip-validate-md: false
      skip-phplint: false
      skip-check-composer: true
      skip-ec-checker: false
      dependency-analyser-options: ""

  install:
    name: "Install Project"

    needs: "validate"

    uses: "mimmi20/ci/.github/workflows/install.yml@master"
    with:
      extensions: "ctype, curl, dom, iconv, intl, mbstring, simplexml, tokenizer, xml, xmlwriter"
      ini-values: "opcache.enable=1, opcache.fast_shutdown=0, zend.assertions=1, assert.exception=On, intl.default_locale=de, intl.use_exceptions=1, zend.exception_ignore_args=0"
      composer-options: "--optimize-autoloader --prefer-dist --prefer-stable -v"
      skip-php-install: false
      skip-npm-install: true

  analytics:
    name: "Project Analysis"

    needs: "install"

    uses: "mimmi20/ci/.github/workflows/analytics.yml@master"
    with:
      extensions: "ctype, curl, dom, iconv, intl, mbstring, simplexml, tokenizer, xml, xmlwriter"
      ini-values: "opcache.enable=1, opcache.fast_shutdown=0, zend.assertions=1, assert.exception=On, intl.default_locale=de, intl.use_exceptions=1, zend.exception_ignore_args=0"
      composer-options: "--optimize-autoloader --prefer-dist --prefer-stable -v"
      skip-php-cs-fixer: true
      skip-phpcs: false
      skip-phpstan: false
      skip-rector: false
      skip-eslint: true
      skip-stylelint: true
      skip-prettier: true
      phpcs-options: ""

  tests:
    name: "UnitTests"

    needs: "analytics"

    uses: "mimmi20/ci/.github/workflows/test.yml@master"
    with:
      extensions: "ctype, dom, fileinfo, intl, simplexml, tokenizer, xml, xmlwriter"
      ini-values: "opcache.enable=1, opcache.fast_shutdown=0, zend.assertions=1, assert.exception=On, intl.default_locale=de, intl.use_exceptions=1, zend.exception_ignore_args=0"
      coverage: "xdebug"
      composer-options: "--optimize-autoloader --prefer-dist --prefer-stable -v"
      test-name: ""
      min-msi: 96.1
      min-covered-msi: 96.1
      skip-phpunit: false
      skip-vitest: true
      skip-stryker: true
      upload-codecov: true
      upload-codeclimate: false
      upload-coveralls: true
      upload-flag: ""
    secrets:
      ENV_CODECLIMATE_API_KEY: ${{ secrets.CODECLIMATE_API_KEY }}
      ENV_CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      ENV_STRYKER_DASHBOARD_API_KEY: ${{ secrets.STRYKER_DASHBOARD_API_KEY }}

  integration-tests:
    name: "Integration Tests with PHPUnit"

    needs: "analytics"

    runs-on: "${{ matrix.operating-system }}"

    continue-on-error: false

    strategy:
      fail-fast: false

      matrix:
        operating-system:
          - "ubuntu-latest"

        php-version:
          - "8.4"

        dependencies:
          - "lowest"

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v5"
        with:
          # Disabling shallow clone is recommended for improving relevancy of reporting
          fetch-depth: 0
          lfs: false
          persist-credentials: false

      - name: "Install PHP"
        uses: "shivammathur/setup-php@2.35.5"
        with:
          php-version: "${{ matrix.php-version }}"
          extensions: "none, phar, json, opcache, ctype, curl, dom, iconv, intl, mbstring, simplexml, tokenizer, xml, xmlwriter"
          ini-values: "opcache.enable=1, opcache.fast_shutdown=0, zend.assertions=1, assert.exception=On, intl.default_locale=de, intl.use_exceptions=1, zend.exception_ignore_args=0"
          coverage: "none"
          tools: "composer:v2"
        env:
          fail-fast: true
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          phpts: "nts"
          debug: true

      - name: "Update dependencies with composer"
        uses: "ramsey/composer-install@3.1.1"
        with:
          dependency-versions: "${{ matrix.dependencies }}"
          composer-options: "--optimize-autoloader --prefer-dist --prefer-stable -v"

      - name: "Run integration tests with phpunit/phpunit"
        run: "vendor/bin/phpunit -c phpunit-integration.xml --no-coverage --colors --display-warnings --display-deprecations"

      - name: "Enable annotations for validation errors and warnings"
        uses: "korelstar/xmllint-problem-matcher@v1"

      - name: "Validate phpcs.xml"
        uses: "ChristophWurst/xmllint-action@v1"
        with:
          xml-file: "phpunit-integration.xml"
          xml-schema-file: "vendor/phpunit/phpunit/phpunit.xsd"

  # This is a meta job to avoid to have to constantly change the protection rules
  # whenever we touch the matrix.
  tests-status:
    name: "Unit & Integration Tests Status"

    runs-on: "ubuntu-latest"

    if: always()

    needs:
      - "tests"

    steps:
      - name: Successful run
        if: ${{ !(contains(needs.*.result, 'failure')) }}
        run: exit 0

      - name: Failing run
        if: ${{ contains(needs.*.result, 'failure') }}
        run: exit 1
